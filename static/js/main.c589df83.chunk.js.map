{"version":3,"sources":["FrontPage/FrontPage.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","keyframes","fadein","FrontPage","useHistory","d","Date","months","useState","toLocaleTimeString","fullTime","setTime","getMonth","getDate","getFullYear","fullDate","setDate","menu","setMenu","handleClick","alert","plusClick","useEffect","setInterval","className","onClick","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yaAQeA,IAAOC,IAAV,IAA8BC,YAA9B,IAA0CC,WAAtD,IA6EeC,EA3EG,WAEAC,cAId,IAAIC,EAAI,IAAIC,KACNC,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,OAP1E,EAQQC,mBAASH,EAAEI,sBARnB,mBAQbC,EARa,KAQHC,EARG,OASQH,mBAASD,EAAOF,EAAEO,YAAc,IAAMP,EAAEQ,UAAY,MAAQR,EAAES,eATtE,mBASbC,EATa,KASHC,EATG,OAUIR,oBAAS,GAVb,mBAUbS,EAVa,KAUPC,EAVO,KAkBpB,SAASC,IACLC,MAAM,mBAGV,SAASC,IACLH,GAASD,GAGb,OAfAK,qBAAU,WACNC,aAAY,WACR,IAAIlB,EAAI,IAAIC,KACZK,EAAQN,EAAEI,sBACVO,EAAQT,EAAOF,EAAEO,YAAc,IAAMP,EAAEQ,UAAY,MAAQR,EAAES,iBAC9D,QAWH,yBAAKU,UAAW,aACZ,yBAAKA,UAAW,QACZ,4BAAQA,UAAW,kBACnB,4BAAQA,UAAW,mBAEvB,uBAAGA,UAAW,cAAd,gBACA,uBAAGA,UAAW,aAAd,mCACA,uBAAGA,UAAW,uBAAd,eAPJ,IAO0D,uBAAGA,UAAW,mCAAd,2BACtD,uBAAGA,UAAW,qBAAd,iBACA,uBAAGA,UAAW,mBAAd,kBACA,yBAAKA,UAAW,YACZ,wBAAIA,UAAW,mBAEnB,0BAAMA,UAAW,WAChBP,EACG,uBAAGO,UAAW,OAAQC,QAASJ,GAA/B,KAEA,uBAAGG,UAAW,OAAQC,QAASJ,GAA/B,KAEJ,uBAAGG,UAAW,QAAST,GACvB,yBAAKS,UAAW,YACZ,wBAAIA,UAAW,mBAEnB,uBAAGA,UAAW,QAAd,oBACA,uBAAGA,UAAW,eAAgBd,GAC7BO,EACG,uBAAGO,UAAW,UACV,uBAAGA,UAAW,QAASC,QAASN,GAAhC,SACA,uBAAGK,UAAW,OAAQC,QAASN,GAA/B,QACA,uBAAGK,UAAW,UAAWC,QAASN,GAAlC,YAGJ,8BCtDDO,MAVf,WAEE,OACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,UAAW1B,IACnC,kBAAC,EAAD,QCEY2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.c589df83.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fadein } from 'react-animations';\nimport styled, { keyframes } from 'styled-components';\nimport { Route, useHistory } from 'react-router-dom';\nimport './FrontPage.css';\nimport 'typeface-lato';\nimport 'typeface-fira-code';\n\nconst Fadein = styled.div`animation: 2s ${keyframes`${fadein}`} infinite`;\n\nconst FrontPage = () => {\n    const myStyle = {}\n    let history = useHistory();\n    function handleLinkClick(link){\n        history.push(link)\n    }\n    let d = new Date();\n    const months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEPT\", \"OCT\", \"NOV\", \"DEC\"];\n    const [fullTime, setTime] = useState(d.toLocaleTimeString());\n    const [fullDate, setDate] = useState(months[d.getMonth()] + \" \" + d.getDate() + \" - \" + d.getFullYear());\n    const [menu, setMenu] = useState(false);\n    useEffect(() => {\n        setInterval(() => {\n            let d = new Date();\n            setTime(d.toLocaleTimeString());\n            setDate(months[d.getMonth()] + \" \" + d.getDate() + \" - \" + d.getFullYear());\n        }, 1000);\n    });\n    function handleClick() {\n        alert(\"Button Clicked!\")\n    }\n\n    function plusClick() {\n        setMenu(!menu);\n    }\n\n    return (\n        <div className={\"frontpage\"}>\n            <svg className={\"logo\"} >\n                <circle className={\"logo-ellipse3\"}/>\n                <circle className={\"logo-ellipse2\"}/>\n            </svg>\n            <a className={\"intro-text\"} >hi, i'm aly!</a>\n            <a className={\"main-text\"} >DESIGNING WITHOUT THE BULLSH*T.</a>\n            <a className={\"main-text currently\"} >CURRENTLY: </a> <a className={\"main-text currently currentproj\"} >FINISHING THIS WEBSITE.</a>\n            <a className={\"main-text basedin\"} >BASED IN NYC.</a>\n            <a className={\"text-scrolldown\"} >SCROLL DOWN >></a>\n            <div className={'vector-1'} >\n                <hr className={'vector-1-line'}/>\n            </div>\n            <span className={\"circle\"}/>\n            {menu ? (\n                <a className={'plus'} onClick={plusClick}>-</a>\n            ) : (\n                <a className={'plus'} onClick={plusClick}>+</a>\n            )}\n            <a className={'date'}>{fullDate}</a>\n            <div className={'vector-2'} >\n                <hr className={'vector-2-line'}/>\n            </div>\n            <a className={'time'}>IT IS CURRENTLY:</a>\n            <a className={'time actual'}>{fullTime}</a>\n            {menu ? (\n                <a className={'popout'}>\n                    <a className={'about'} onClick={handleClick}>ABOUT</a>\n                    <a className={'work'} onClick={handleClick}>WORK</a>\n                    <a className={'contact'} onClick={handleClick}>CONTACT</a>\n                </a>\n            ) : (\n                <a></a>\n            )}\n\n            {/*<svg className={'popout'} viewBox=\"0 0 166 271\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">*/}\n            {/*    <rect width=\"166\" height=\"271\" fill=\"white\"/>*/}\n            {/*    <path onClick={handleClick} d=\"M35.992 41.599H32.338L31.61 44H30.217L33.325 34.354H35.075L38.19 44H36.72L35.992 41.599ZM32.66 40.486H35.67L34.172 35.474L32.66 40.486ZM46.7175 41.235C46.7175 41.767 46.6125 42.2103 46.4025 42.565C46.1972 42.9197 45.9172 43.202 45.5625 43.412C45.2125 43.622 44.8182 43.7737 44.3795 43.867C43.9455 43.9557 43.4999 44 43.0425 44H40.3545V34.354H42.8395C43.2735 34.354 43.6959 34.3937 44.1065 34.473C44.5172 34.5477 44.8882 34.6783 45.2195 34.865C45.5509 35.047 45.8122 35.2967 46.0035 35.614C46.1995 35.9267 46.2975 36.3187 46.2975 36.79C46.2975 37.196 46.2112 37.5437 46.0385 37.833C45.8705 38.1177 45.6512 38.3487 45.3805 38.526C45.1099 38.6987 44.8205 38.82 44.5125 38.89C44.8625 38.9507 45.2055 39.0627 45.5415 39.226C45.8822 39.3847 46.1622 39.625 46.3815 39.947C46.6055 40.2643 46.7175 40.6937 46.7175 41.235ZM44.8835 36.881C44.8835 36.3583 44.7202 35.9873 44.3935 35.768C44.0715 35.544 43.6259 35.432 43.0565 35.432H41.7405V38.414H43.1685C43.7239 38.414 44.1485 38.295 44.4425 38.057C44.7365 37.8143 44.8835 37.4223 44.8835 36.881ZM45.2615 41.256C45.2615 40.794 45.1705 40.437 44.9885 40.185C44.8112 39.9283 44.5709 39.751 44.2675 39.653C43.9689 39.555 43.6375 39.506 43.2735 39.506H41.7405V42.887H43.2105C43.5232 42.887 43.8359 42.8473 44.1485 42.768C44.4659 42.684 44.7295 42.5253 44.9395 42.292C45.1542 42.0587 45.2615 41.7133 45.2615 41.256ZM55.9941 39.184C55.9941 40.164 55.8587 41.0297 55.5881 41.781C55.3174 42.5323 54.9137 43.1203 54.3771 43.545C53.8451 43.965 53.1824 44.175 52.3891 44.175C51.5957 44.175 50.9307 43.9697 50.3941 43.559C49.8621 43.1437 49.4607 42.5627 49.1901 41.816C48.9194 41.0693 48.7841 40.1967 48.7841 39.198C48.7841 38.2133 48.9194 37.3453 49.1901 36.594C49.4607 35.838 49.8621 35.2477 50.3941 34.823C50.9307 34.3937 51.5957 34.179 52.3891 34.179C53.1824 34.179 53.8451 34.3867 54.3771 34.802C54.9137 35.2173 55.3174 35.8007 55.5881 36.552C55.8587 37.3033 55.9941 38.1807 55.9941 39.184ZM54.5451 39.184C54.5451 37.9147 54.3771 36.951 54.0411 36.293C53.7097 35.635 53.1591 35.306 52.3891 35.306C51.6191 35.306 51.0661 35.6373 50.7301 36.3C50.3987 36.9627 50.2331 37.9287 50.2331 39.198C50.2331 40.4627 50.4034 41.4217 50.7441 42.075C51.0894 42.7237 51.6377 43.048 52.3891 43.048C53.1591 43.048 53.7097 42.7213 54.0411 42.068C54.3771 41.41 54.5451 40.4487 54.5451 39.184ZM64.7386 34.354V40.857C64.7386 41.5103 64.6056 42.0867 64.3396 42.586C64.0783 43.0853 63.7026 43.475 63.2126 43.755C62.7273 44.035 62.1463 44.175 61.4696 44.175C60.7883 44.175 60.2049 44.035 59.7196 43.755C59.2343 43.475 58.8633 43.0853 58.6066 42.586C58.3546 42.0867 58.2286 41.5103 58.2286 40.857V34.354H59.6146V40.752C59.6146 42.264 60.2329 43.02 61.4696 43.02C62.7156 43.02 63.3386 42.264 63.3386 40.752V34.354H64.7386ZM71.2501 35.509V44H69.8641V35.509H66.8961V34.354H74.2671L74.1201 35.509H71.2501Z\" fill=\"black\"/>*/}\n            {/*    <path onClick={handleClick} d=\"M38.351 86.354L36.937 96H35.215L34.172 88.783L33.115 96H31.351L30.049 86.354H31.414L32.331 94.565L33.43 87.474H34.998L36.041 94.565L37.084 86.354H38.351ZM46.8995 91.184C46.8995 92.164 46.7642 93.0297 46.4935 93.781C46.2229 94.5323 45.8192 95.1203 45.2825 95.545C44.7505 95.965 44.0879 96.175 43.2945 96.175C42.5012 96.175 41.8362 95.9697 41.2995 95.559C40.7675 95.1437 40.3662 94.5627 40.0955 93.816C39.8249 93.0693 39.6895 92.1967 39.6895 91.198C39.6895 90.2133 39.8249 89.3453 40.0955 88.594C40.3662 87.838 40.7675 87.2477 41.2995 86.823C41.8362 86.3937 42.5012 86.179 43.2945 86.179C44.0879 86.179 44.7505 86.3867 45.2825 86.802C45.8192 87.2173 46.2229 87.8007 46.4935 88.552C46.7642 89.3033 46.8995 90.1807 46.8995 91.184ZM45.4505 91.184C45.4505 89.9147 45.2825 88.951 44.9465 88.293C44.6152 87.635 44.0645 87.306 43.2945 87.306C42.5245 87.306 41.9715 87.6373 41.6355 88.3C41.3042 88.9627 41.1385 89.9287 41.1385 91.198C41.1385 92.4627 41.3089 93.4217 41.6495 94.075C41.9949 94.7237 42.5432 95.048 43.2945 95.048C44.0645 95.048 44.6152 94.7213 44.9465 94.068C45.2825 93.41 45.4505 92.4487 45.4505 91.184ZM55.7701 89.091C55.7701 89.8143 55.5484 90.3977 55.1051 90.841C54.6664 91.2797 54.1251 91.583 53.4811 91.751L56.2881 96H54.6431L52.1021 91.933H50.9051V96H49.5121V86.354H52.0811C53.2897 86.354 54.2067 86.585 54.8321 87.047C55.4574 87.5043 55.7701 88.1857 55.7701 89.091ZM54.2931 89.091C54.2931 88.4983 54.1204 88.0713 53.7751 87.81C53.4344 87.5487 52.9094 87.418 52.2001 87.418H50.9051V90.876H52.2141C52.8767 90.876 53.3877 90.7407 53.7471 90.47C54.1111 90.1947 54.2931 89.735 54.2931 89.091ZM60.0346 96H58.6486V86.354H60.0346V96ZM60.1046 90.848L63.7166 86.354H65.2776L61.6796 90.757L65.5436 96H63.8496L60.1046 90.848Z\" fill=\"black\"/>*/}\n            {/*    <path onClick={handleClick} d=\"M35.012 138.179C35.6513 138.179 36.188 138.261 36.622 138.424C37.0607 138.587 37.4713 138.825 37.854 139.138L37.105 140.02C36.8063 139.773 36.489 139.593 36.153 139.481C35.817 139.364 35.4647 139.306 35.096 139.306C34.5873 139.306 34.1183 139.43 33.689 139.677C33.2597 139.924 32.9143 140.33 32.653 140.895C32.3917 141.46 32.261 142.218 32.261 143.17C32.261 144.099 32.3847 144.845 32.632 145.41C32.884 145.97 33.2223 146.378 33.647 146.635C34.0763 146.887 34.5547 147.013 35.082 147.013C35.6093 147.013 36.0457 146.931 36.391 146.768C36.741 146.6 37.0443 146.409 37.301 146.194L37.994 147.083C37.6907 147.382 37.2963 147.638 36.811 147.853C36.3303 148.068 35.7423 148.175 35.047 148.175C34.249 148.175 33.5303 147.984 32.891 147.601C32.2563 147.218 31.7523 146.656 31.379 145.914C31.0057 145.167 30.819 144.253 30.819 143.17C30.819 142.087 31.008 141.175 31.386 140.433C31.7687 139.691 32.2773 139.131 32.912 138.753C33.5513 138.37 34.2513 138.179 35.012 138.179ZM46.8995 143.184C46.8995 144.164 46.7642 145.03 46.4935 145.781C46.2229 146.532 45.8192 147.12 45.2825 147.545C44.7505 147.965 44.0879 148.175 43.2945 148.175C42.5012 148.175 41.8362 147.97 41.2995 147.559C40.7675 147.144 40.3662 146.563 40.0955 145.816C39.8249 145.069 39.6895 144.197 39.6895 143.198C39.6895 142.213 39.8249 141.345 40.0955 140.594C40.3662 139.838 40.7675 139.248 41.2995 138.823C41.8362 138.394 42.5012 138.179 43.2945 138.179C44.0879 138.179 44.7505 138.387 45.2825 138.802C45.8192 139.217 46.2229 139.801 46.4935 140.552C46.7642 141.303 46.8995 142.181 46.8995 143.184ZM45.4505 143.184C45.4505 141.915 45.2825 140.951 44.9465 140.293C44.6152 139.635 44.0645 139.306 43.2945 139.306C42.5245 139.306 41.9715 139.637 41.6355 140.3C41.3042 140.963 41.1385 141.929 41.1385 143.198C41.1385 144.463 41.3089 145.422 41.6495 146.075C41.9949 146.724 42.5432 147.048 43.2945 147.048C44.0645 147.048 44.6152 146.721 44.9465 146.068C45.2825 145.41 45.4505 144.449 45.4505 143.184ZM53.6141 148L50.3591 139.635C50.3684 139.798 50.3871 140.078 50.4151 140.475C50.4477 140.867 50.4781 141.32 50.5061 141.833C50.5341 142.342 50.5481 142.85 50.5481 143.359V148H49.2881V138.354H51.1291L54.4191 146.74C54.4097 146.581 54.3887 146.318 54.3561 145.949C54.3234 145.576 54.2931 145.135 54.2651 144.626C54.2417 144.117 54.2301 143.574 54.2301 142.995V138.354H55.4901V148H53.6141ZM62.1556 139.509V148H60.7696V139.509H57.8016V138.354H65.1726L65.0256 139.509H62.1556ZM72.3701 145.599H68.7161L67.9881 148H66.5951L69.7031 138.354H71.4531L74.5681 148H73.0981L72.3701 145.599ZM69.0381 144.486H72.0481L70.5501 139.474L69.0381 144.486ZM80.4847 138.179C81.124 138.179 81.6607 138.261 82.0947 138.424C82.5333 138.587 82.944 138.825 83.3267 139.138L82.5777 140.02C82.279 139.773 81.9617 139.593 81.6257 139.481C81.2897 139.364 80.9373 139.306 80.5687 139.306C80.06 139.306 79.591 139.43 79.1617 139.677C78.7323 139.924 78.387 140.33 78.1257 140.895C77.8643 141.46 77.7337 142.218 77.7337 143.17C77.7337 144.099 77.8573 144.845 78.1047 145.41C78.3567 145.97 78.695 146.378 79.1197 146.635C79.549 146.887 80.0273 147.013 80.5547 147.013C81.082 147.013 81.5183 146.931 81.8637 146.768C82.2137 146.6 82.517 146.409 82.7737 146.194L83.4667 147.083C83.1633 147.382 82.769 147.638 82.2837 147.853C81.803 148.068 81.215 148.175 80.5197 148.175C79.7217 148.175 79.003 147.984 78.3637 147.601C77.729 147.218 77.225 146.656 76.8517 145.914C76.4783 145.167 76.2917 144.253 76.2917 143.17C76.2917 142.087 76.4807 141.175 76.8587 140.433C77.2413 139.691 77.75 139.131 78.3847 138.753C79.024 138.37 79.724 138.179 80.4847 138.179ZM89.4392 139.509V148H88.0532V139.509H85.0852V138.354H92.4562L92.3092 139.509H89.4392Z\" fill=\"black\"/>*/}\n            {/*    <path onClick={handleClick} d=\"M55.5 222.5H40.5C36.36 222.5 33 225.86 33 230C33 234.14 36.36 237.5 40.5 237.5H55.5C59.64 237.5 63 234.14 63 230C63 225.86 59.64 222.5 55.5 222.5ZM55.5 234.5C53.01 234.5 51 232.49 51 230C51 227.51 53.01 225.5 55.5 225.5C57.99 225.5 60 227.51 60 230C60 232.49 57.99 234.5 55.5 234.5Z\" fill=\"black\"/>*/}\n            {/*</svg>*/}\n\n        </div>\n\n    )\n}\n\nexport default FrontPage;\n","import React from 'react';\nimport './App.css';\nimport FrontPage from \"./FrontPage/FrontPage\";\nimport { Switch, Route } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n      <Switch>\n        <Route exact path={'/'} component={FrontPage}/>\n        <FrontPage />\n      </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}